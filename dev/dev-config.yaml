###################################
#  Ambianic dev mode config file  #
###################################
version: '2021.11.11'

# path to the data directory
data_dir: ./data

# Set logging level to one of DEBUG, INFO, WARNING, ERROR
logging:
  file: ./data/ambianic-log.txt
  level: DEBUG
  # set a less noisy log level for the console output
  # console_level: WARNING

# Store notifications provider configuration
# see https://github.com/caronc/apprise#popular-notification-services for syntax examples
# notifications:
#   catch_all_email:
#     include_attachments: true
#     providers:
#       - mailto://userid:pass@domain.com
#   alert_fall:
#     providers:
#       - mailto://userid:pass@domain.com
#       - json://hostname/a/path/to/post/to

# Pipeline event timeline configuration
timeline:
  event_log: ./data/timeline-event-log.yaml

# Cameras and other input data sources
# Using Home Assistant conventions to ease upcoming integration
sources:

#  # direct support for raspberry picamera
#  picamera:
#    uri: picamera
#    type: video
#    live: true
#
#  # local video device integration example
#  webcam:
#    uri: /dev/video0
#    type: video
#    live: true

  recorded_cam_feed:
    # location of the recorded video file in a gitpod (or local) dev environment
    uri: file:///workspace/tests/pipeline/avsource/test_images_video.avi  ##test_images_video.avi ##test2-cam-person1.mkv
    type: video
    # live: true when we want the pipeline to keep looping over the same video file.
    # live: false when we want the pipeline to go through the video file once and stop.
    live: false

ai_models:
  image_detection:
    model:
      tflite: ai_models/mobilenet_ssd_v2_coco_quant_postprocess.tflite
      edgetpu: ai_models/mobilenet_ssd_v2_coco_quant_postprocess_edgetpu.tflite
    labels: ai_models/coco_labels.txt
  face_detection:
    model:
      tflite: ai_models/mobilenet_ssd_v2_face_quant_postprocess.tflite
      edgetpu: ai_models/mobilenet_ssd_v2_face_quant_postprocess_edgetpu.tflite
    labels: ai_models/coco_labels.txt
    top_k: 2
  fall_detection:
    model:
      tflite: ai_models/posenet_mobilenet_v1_100_257x257_multi_kpt_stripped.tflite
      edgetpu: ai_models/posenet_mobilenet_v1_075_721_1281_quant_decoder_edgetpu.tflite
    labels: ai_models/pose_labels.txt

# A named pipeline defines an ordered sequence of operations
# such as reading from a data source, AI model inference, saving samples and others.
pipelines:
   # Pipeline names could be descriptive, e.g. front_door_watch or entry_room_watch.
   area_watch:
     - source: recorded_cam_feed
     - detect_objects: # run ai inference on the input data
        ai_model: image_detection
        confidence_threshold: 0.6
        # Watch for any of the labels listed below. The labels must be from the model trained label set.
        # If no labels are listed, then watch for all model trained labels.
        label_filter:
          - person
          - car
     - save_detections: # save samples from the inference results
        positive_interval: 300 # how often (in seconds) to save samples with ANY results above the confidence threshold
        idle_interval: 6000 # how often (in seconds) to save samples with NO results above the confidence threshold
     - detect_falls: # look for falls
        ai_model: fall_detection
        confidence_threshold: 0.6
     - save_detections: # save samples from the inference results
        positive_interval: 10
        idle_interval: 600000
#        notify: # notify a thirdy party service
#          providers:
#            - alert_fall
